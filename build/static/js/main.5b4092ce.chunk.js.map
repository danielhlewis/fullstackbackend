{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/PersonList.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","setFilter","value","onChange","event","target","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","newName","setNewName","newNumber","setNewNumber","persons","setPersons","setNotificationMessage","setErrorMessage","onSubmit","preventDefault","oldPersons","x","name","console","log","length","personService","number","returnedPerson","concat","setTimeout","oldPerson","window","confirm","newPerson","map","catch","error","type","PersonList","deletePerson","namesToShow","toLowerCase","indexOf","toLocaleLowerCase","person","key","onClick","Notification","message","className","App","useState","notificationMessage","errorMessage","useEffect","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b4092ce.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ( {filter, setFilter} ) => {\r\n\tconst handleFilterChange = (event) => {\r\n\t\tsetFilter(event.target.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>filter shown with \r\n\t\t<input value={filter} onChange={handleFilterChange} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`)\r\n\treturn request\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nimport personService from '../services/persons'\r\n\r\nconst PersonForm = ( {newName, setNewName, newNumber, setNewNumber, persons, setPersons, setNotificationMessage, setErrorMessage}) => {\r\n\tconst addPerson = (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst oldPersons = persons.filter(x => x.name === newName)\r\n\t\tconsole.log(`Existing persons: ${oldPersons}`)\r\n\t\tif (oldPersons.length === 0) {\r\n\t\t\tconst personObject = {\r\n\t\t\t\tname: newName,\r\n\t\t\t\tnumber: newNumber\r\n\t\t\t}\r\n\r\n\t\t\tpersonService\r\n\t\t\t.create(personObject)\r\n\t\t\t.then(returnedPerson => {\r\n\t\t\t\tsetPersons(persons.concat(returnedPerson))\r\n\t\t\t\tsetNewName('')\r\n\t\t\t\tsetNewNumber('')\r\n\t\t\t\tsetNotificationMessage(\r\n\t\t\t\t\t`Added '${returnedPerson.name}'`\r\n\t\t\t\t)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetNotificationMessage(null)\r\n\t\t\t\t}, 5000)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tconst oldPerson = oldPersons[0]\r\n\t\t\tif (window.confirm(`${newName} is already added to the phonebook, replace the old number with the new one?`)) {\r\n\t\t\t\tconst newPerson = { ...oldPerson, number: newNumber}\r\n\t\t\t\tconsole.log(\"Updating \", newPerson)\r\n\t\t\t\tpersonService\r\n\t\t\t\t.update(newPerson.id, newPerson)\r\n\t\t\t\t.then(returnedPerson => {\r\n\t\t\t\t\tsetPersons(persons.map(x => x.id === returnedPerson.id ? returnedPerson : x))\r\n\t\t\t\t\tsetNewName('')\r\n\t\t\t\t\tsetNewNumber('')\r\n\t\t\t\t\tsetNotificationMessage(\r\n\t\t\t\t\t\t`Updated ${newPerson.name}'s number`\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetNotificationMessage(null)\r\n\t\t\t\t\t}, 5000)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tsetErrorMessage(\r\n\t\t\t\t\t\t`Information of ${newPerson.name} has already been removed from the system`\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t\t}, 5000)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleNameChange = (event) => {\r\n\t\t\tsetNewName(event.target.value)\r\n\t}\r\n\r\n\tconst handleNumberChange = (event) => {\r\n\t\t\tsetNewNumber(event.target.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={addPerson}>\r\n\t\t<div>\r\n\t\t\tname: <input value={newName} \r\n\t\t\t\t\tonChange={handleNameChange}\t\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tnumber: <input value={newNumber} \r\n\t\t\t\t\tonChange={handleNumberChange}\t\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button type=\"submit\">add</button>\r\n\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst PersonList = ({persons, filter, deletePerson}) => {\r\n\tconst namesToShow = \r\n\t  persons.filter(x => x.name.toLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1)\r\n  \r\n\treturn (\r\n\t  <>\r\n\t  {namesToShow.map(person => \r\n\t  \t<div key={person.name}>\r\n\t\t\t{person.name} {person.number}\r\n\t\t\t<button onClick={() => deletePerson(person.id)}>delete</button>\r\n\t\t</div>)}\r\n\t  </>\r\n\t)\r\n}\r\n\r\nexport default PersonList","import React from 'react'\r\n\r\nimport './Notification.css'\r\n\r\nconst Notification = ({ message, className }) => {\r\n\tif (message === null) {\r\n\t  return null\r\n\t}\r\n  \r\n\treturn (\r\n\t  <div className={className}>\r\n\t\t{message}\r\n\t  </div>\r\n\t)\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\n\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport PersonList from './components/PersonList'\r\nimport Notification from './components/Notification'\r\n\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\r\n  const [ errorMessage, setErrorMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n\t\t.getAll()\r\n\t\t\t.then(persons => {\r\n\t\t\tsetPersons(persons)\r\n\t\t})\r\n  }, [])\r\n  console.log('render', persons.length, 'persons')\r\n\r\n  const deletePerson = (id) => {\r\n    if (window.confirm(`Delete ${persons.find((x) => x.id === id).name}?`)) {\r\n      personService\r\n      .remove(id)\r\n      .then(\r\n        setPersons(persons.filter((x) => x.id !== id))\r\n      )\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} className=\"notification\" />\r\n      <Notification message={errorMessage} className=\"error\" />\r\n      <Filter filter={filter} setFilter={setFilter} />\r\n      <h2>add a new</h2>\r\n      <PersonForm newName={newName} setNewName={setNewName}\r\n                  newNumber={newNumber} setNewNumber={setNewNumber}\r\n                  persons={persons} setPersons={setPersons}\r\n                  setNotificationMessage={setNotificationMessage}\r\n                  setErrorMessage={setErrorMessage}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <PersonList persons={persons} filter={filter} deletePerson={deletePerson}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from \"./App\"\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}